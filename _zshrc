echo "source .zshrc"
# setting alias
alias where="command -v"
alias j="jobs -l"
alias ls='ls -F -G -w'
alias ll='ls -l'
alias la='ls -a'
alias du="du -h"
alias df="df -h"
alias su="su -l"
alias lvim="vim -c \"normal '0\""
alias st='/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl'
function git(){hub "$@"}
function cdls() {
 # cdがaliasでループするので\をつける
  \cd $1;
  ls -l;
}
alias cd=cdls
# 履歴のフォワードサーチを有効化
stty stop undef

# ロケール設定
LANG=ja_JP.UTF-8

# *** 補完の設定 ***
# 補完の有効化
autoload -Uz compinit
compinit
# 先方予測機能の有効化
#autoload predict-on
#predict-on

# *** プロンプトの設定 ***
setopt prompt_subst
autoload -Uz colors
colors
case ${UID} in
  0)
    PROMPT='${WINDOW:+"[$WINDOW]"}%{$fg[green]%}%n@%m %(!.#.$) %{$reset_color%}'
    #RPROMPT="`branch-status-check` [%{$fg[yellow]%}%~%{$reset_color%}]"
    RPROMPT="[%{$fg[red]%}%~%{$reset_color%}]"
    SPROMPT="%{${fg[red]}%}correct: %R -> %r [n,y,a,e]? %{${reset_color}%}"
    ;;
  *)
    PROMPT='${WINDOW:+"[$WINDOW]"}%{$fg[green]%}%n@%m %(!.#.$) %{$reset_color%}'
    #RPROMPT="`branch-status-check` [%{$fg[green]%}%~%{$reset_color%}]"
    RPROMPT="[%{$fg[green]%}%~%{$reset_color%}]"
    SPROMPT="%{${fg[red]}%}correct: %R -> %r [n,y,a,e]? %{${reset_color}%}"
    [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
        PROMPT="%{${fg[red]}%}${HOST%%.*} ${PROMPT}"
    ;;
esac
    
# Gitのブランチとステータスを表示する
# {{{ methods for RPROMPT
# fg[color]表記と$reset_colorを使いたい
# @see https://wiki.archlinux.org/index.php/zsh
function branch-status-check {
    local prefix branchname suffix
        # .gitの中だから除外
        if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
            return
        fi
        branchname=`get-branch-name`
        # ブランチ名が無いので除外
        if [[ -z $branchname ]]; then
            return
        fi
        prefix=`get-branch-status` #色だけ返ってくる
        suffix='%{'${reset_color}'%}'
        echo ${prefix}${branchname}${suffix}
}
function get-branch-name {
    # gitディレクトリじゃない場合のエラーは捨てます
    echo `git rev-parse --abbrev-ref HEAD 2> /dev/null`
}
function get-branch-status {
    local res color
        output=`git status --short 2> /dev/null`
        if [ -z "$output" ]; then
            res=':' # status Clean
            color='%{'${fg[green]}'%}'
        elif [[ $output =~ "[\n]?\?\? " ]]; then
            res='?:' # Untracked
            color='%{'${fg[yellow]}'%}'
        elif [[ $output =~ "[\n]? M " ]]; then
            res='M:' # Modified
            color='%{'${fg[red]}'%}'
        else
            res='A:' # Added to commit
            color='%{'${fg[cyan]}'%}'
        fi
        # echo ${color}${res}'%{'${reset_color}'%}'
        echo ${color} # 色だけ返す
}

# *** 履歴の設定 ***
HISTSIZE=50000
SAVEHIST=$HISTSIZE
HISTFILE=~/.zsh_history
setopt hist_ignore_all_dups # 重複の回避
setopt share_history  # zsh間での履歴共有

# *** コマンドの設定 ***
setopt auto_cd      # cdコマンドの省略化
setopt auto_pushd   # cd -<tab>で履歴を表示
setopt correct      # コマンド版もしかして機能
setopt list_packed  # リストをつめて表示
setopt no_list_beep # 補完候補表示時のビープ音を消音化

# *** スタイルの設定 ***
# リストのカラー設定
export LSCOLORS=gxfxcxdxbxegedabagacad  # lsコマンドのカラー
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34' # 候補リストのカラー
#unset LSCOLORS
#export LSCOLORS=ExFxCxdxBxegedabagacad
#zstyle ':completion:*' list-colors 'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
# 補完方法のグループ化
zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*' group-name ''
# 補完候補の選択(２つ以上なければすぐ補完)
zstyle ':completion:*' menu select=2
# 補完対象を大文字小文字区別なく行う
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'

# ビープ音を無効にする
setopt nolistbeep

#zstyle ':completion:*' completer _expand _complete _correct _approximate
#eval "$(dircolors -b)"
#zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
#zstyle ':completion:*' menu select=long
#zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
#zstyle ':completion:*' use-compctl false
#zstyle ':completion:*' verbose true
#
#zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
#zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# 固有の設定の読み込み
[ -f ~/.zshrc.mine ] && source ~/.zshrc.mine
